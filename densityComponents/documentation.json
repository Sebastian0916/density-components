{
    "pipes": [],
    "interfaces": [
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-0f99076112ec19ab117d71685eed0f2375b05777450af18992d8092c2b2e5eb14801570e0f9593665fce5b8b387e374859d25a900616e68afff56ce9675a287d",
            "file": "src/app/app.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nexport interface Section {\r\n  name: string;\r\n  updated: Date;\r\n}\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n  title = 'densityComponents';\r\n  panelOpenState = false;\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n\r\n\r\n\r\n  typesOfShoes: string[] = [\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ];\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PeriodicElement",
            "id": "interface-PeriodicElement-68c4c52ac760582e5cd6cee4d59ee52f9327fdac6bf31f01a1bbd80ce05f12a6f945599a1d522f398262f99255bd7f8c55cd6bfca1cc1e9532e9196af8283ad9-1",
            "file": "src/stories/components/table/table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n];\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n})\nexport class TableComponent {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  @Input()\n  size!: string;\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "symbol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PeriodicElement-1"
        },
        {
            "name": "Section",
            "id": "interface-Section-0f99076112ec19ab117d71685eed0f2375b05777450af18992d8092c2b2e5eb14801570e0f9593665fce5b8b387e374859d25a900616e68afff56ce9675a287d",
            "file": "src/app/app.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nexport interface Section {\r\n  name: string;\r\n  updated: Date;\r\n}\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n  title = 'densityComponents';\r\n  panelOpenState = false;\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n\r\n\r\n\r\n  typesOfShoes: string[] = [\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ];\r\n\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "updated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "SizeDirective",
            "id": "directive-SizeDirective-3772dcc1021729cd4b3b5641f38839574293a3934b1152e5e2169c4e5ece6e27f44cbd932ab1df6c36b2448f25d121f6adbc0da8a6b699e0cc438916e503721c",
            "file": "src/theme/size.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n\r\nexport type Size = 'small' | 'medium' | 'large';\r\n\r\n@Directive({\r\n  selector: `[size]`,\r\n})\r\nexport class SizeDirective implements OnChanges {\r\n  constructor(private el: ElementRef<HTMLElement>) {}\r\n\r\n  @Input() size !: Size ;\r\n\r\n  ngOnChanges() {\r\n    this.el.nativeElement.classList.add(this.size);\r\n  }\r\n}\r\n",
            "selector": "[size]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Size",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0f99076112ec19ab117d71685eed0f2375b05777450af18992d8092c2b2e5eb14801570e0f9593665fce5b8b387e374859d25a900616e68afff56ce9675a287d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"before\" | \"after\"",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "title",
                    "defaultValue": "'densityComponents'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "typesOfShoes",
                    "defaultValue": "[\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Validators, FormBuilder, FormControl } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  position: number;\r\n  weight: number;\r\n  symbol: string;\r\n}\r\nexport interface Section {\r\n  name: string;\r\n  updated: Date;\r\n}\r\nconst ELEMENT_DATA: PeriodicElement[] = [\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n];\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n  title = 'densityComponents';\r\n  panelOpenState = false;\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n\r\n\r\n\r\n  typesOfShoes: string[] = [\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ];\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<!-- <mat-list role=\"list\" size=\"small\" >  <mat-list-item role=\"listitem\">    <p>Hello world</p>    <button mat-icon-button matListItemMeta >      <mat-icon >note</mat-icon>    </button>  </mat-list-item>  <mat-list-item role=\"listitem\">    <p>Hello world</p>    <button mat-icon-button matListItemMeta>      <mat-icon >note</mat-icon>    </button>  </mat-list-item>  <mat-list-item role=\"listitem\">    <p>Hello world</p>    <button mat-icon-button matListItemMeta>      <mat-icon >note</mat-icon>    </button>  </mat-list-item>  <mat-list />Contraer -->\r\n<mat-icon size=\"small\">home</mat-icon>\r\n<mat-icon>home</mat-icon>\r\n<mat-icon size=\"large\">home</mat-icon>\r\n<button mat-raised-button size=\"small\">\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n<button mat-raised-button >\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n<button mat-raised-button size=\"large\">\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n\r\n<button mat-icon-button size=\"small\">\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-icon-button>\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-icon-button size=\"large\">\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-fab size=\"small\">\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-fab>\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-fab size=\"large\">\r\n  <mat-icon>home</mat-icon>\r\n  <!-- large -->\r\n</button>\r\n<button mat-fab extended size=\"small\">\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n<button mat-fab extended=\"\">\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n<button mat-fab extended size=\"large\">\r\n  <mat-icon>home</mat-icon>\r\n  large\r\n</button>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-c093d189009ffe5350b14ba87ed812a16780282f0caa6fddda1747c7a1dfb5e4228ca175085912b464fde235761488830c30d3960e757cfbf7a57cca8a56bd2a",
            "file": "src/stories/components/mat-button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": " mat-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-raised-button [ngClass]=\"sizes\">{{ label }}</button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: ' mat-button',\n  template: `<button mat-raised-button [ngClass]=\"sizes\">{{ label }}</button>`,\n})\nexport class ButtonComponent {\n  @Input() size!: string;\n  @Input() label!: string;\n  @Input() color!: string;\n\n  public get sizes(): string[] {\n    return [`${this.size}`, `button-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "ButtonToggleComponent",
            "id": "component-ButtonToggleComponent-6750ad5bb56c5b780c4654b92aff2528f92620d28b6ef00be1727d737f7bad52a613dad478248c6a5d8d2b87b0c5db48654fcf6522dea5e580866409e3daf01b",
            "file": "src/stories/components/button-toggle/button-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button-toggle',\r\n  template: ``,\r\n})\r\nexport class ButtonToggleComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-b04cea1108590b2c6916a2b05da03adcb3e12026fba9171fd52e59e3e099849b82be843380e41cde6d7a189dfe77db0faa88f4a14bd3bceea82ee2a2142b62c3",
            "file": "src/stories/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-checkbox [ngClass]=\"custom\"></mat-checkbox>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-checkbox',\n  template: `<mat-checkbox [ngClass]=\"custom\"></mat-checkbox>`,\n})\nexport class CheckboxComponent {\n  @Input()\n  size!: string;\n  color!: string;\n\n  public get custom(): string[] {\n    return [`${this.size}`, `color-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "custom": {
                    "name": "custom",
                    "getSignature": {
                        "name": "custom",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "ClasesGlobalesComponent",
            "id": "component-ClasesGlobalesComponent-ca64f8819893e1a013bf268b6b092039815df5ae532caa50aff88e0a5427991377d9f92c244d596b73715a0ede8929a25271a30c8147e72e08267a57fe293f3d",
            "file": "src/stories/components/Clases/clases-globales/clases-globales.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clases-globales",
            "styleUrls": [
                "../../../../stories/stylesStorybook/_clases.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./clases-globales.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cursor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "opacity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "shadow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'clases-globales',\r\n  templateUrl: './clases-globales.component.html',\r\n  styleUrls: ['../../../../stories/stylesStorybook/_clases.scss'],\r\n})\r\nexport class ClasesGlobalesComponent {\r\n  @Input() text!: string;\r\n  @Input() cursor!: string;\r\n  @Input() opacity!: string;\r\n  @Input() display!: string;\r\n  @Input() position!: string;\r\n  @Input() shadow!: string;\r\n\r\n  public get sizes(): string[] {\r\n    return [\r\n      `sizes--${this.text}`, `sizes--${this.cursor}`,\r\n      `sizes--${this.opacity}`, `sizes--${this.display}`,\r\n      `sizes--${this.position}` ,`sizes--${this.shadow}`\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".p {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.icon-container {\r\n  margin-top: 0.5rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.layout {\r\n  display: flex;\r\n  gap: 8px !important;\r\n  width: 50%;\r\n  // height: 25%;\r\n}\r\n.sizes--d-flex {\r\n  display: flex !important;\r\n}\r\n.sizes--d-grid {\r\n  display: grid !important;\r\n}\r\n.sizes--d-block {\r\n  display: block !important;\r\n}\r\n.sizes--d-none {\r\n  display: none !important;\r\n}\r\n.sizes--d-inline {\r\n  display: inline !important;\r\n}\r\n.sizes--help {\r\n  cursor: help !important;\r\n}\r\n.sizes--progress {\r\n  cursor: progress !important;\r\n}\r\n.sizes--wait {\r\n  cursor: wait !important;\r\n}\r\n.sizes--text {\r\n  cursor: text !important;\r\n}\r\n.sizes--not_allowed {\r\n  cursor: not-allowed !important;\r\n}\r\n.sizes--pointer {\r\n  cursor: pointer !important;\r\n}\r\n.sizes--opacity-0 {\r\n  opacity: 0 !important;\r\n}\r\n.sizes--opacity-25 {\r\n  opacity: 0.25 !important;\r\n}\r\n.sizes--opacity-50 {\r\n  opacity: 0.5 !important;\r\n}\r\n.sizes--opacity-75 {\r\n  opacity: 0.75 !important;\r\n}\r\n.sizes--opacity-100 {\r\n  opacity: 1 !important;\r\n}\r\n.sizes--absolute {\r\n  position: absolute !important;\r\n}\r\n.sizes--relative {\r\n  position: relative !important;\r\n}\r\n.sizes--sticky {\r\n  position: sticky !important;\r\n}\r\n.sizes--static {\r\n  position: static !important;\r\n}\r\n.sizes--fixed {\r\n  position: fixed !important;\r\n}\r\n.sizes--s-none {\r\n  box-shadow: none !important;\r\n}\r\n.sizes--text-align-left {\r\n  text-align: left !important;\r\n}\r\n.sizes--text-align-center {\r\n  text-align: center !important;\r\n}\r\n.sizes--text-align-right {\r\n  text-align: right !important;\r\n}\r\n.sizes--none {\r\n  cursor: none !important;\r\n}\r\n.custom-align-items_center {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n}\r\n.custom-align-items_start {\r\n  display: flex !important;\r\n  align-items: start !important;\r\n}\r\n.custom-align-items_end {\r\n  display: flex !important;\r\n  align-items: end !important;\r\n}\r\n.custom-align_items_baseline {\r\n  display: flex !important;\r\n  align-items: baseline !important;\r\n}\r\n.custom-align_items_stretch {\r\n  display: flex !important;\r\n  align-items: stretch !important;\r\n}\r\n.custom-wrap {\r\n  display: flex !important;\r\n  flex-wrap: wrap !important;\r\n}\r\n.custom-nowrap {\r\n  display: flex !important;\r\n  flex-wrap: nowrap !important;\r\n}\r\n.custom-column {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n}\r\n.custom-row_reverse {\r\n  display: flex !important;\r\n  flex-direction: row-reverse !important;\r\n}\r\n.custom-column_reverse {\r\n  display: flex !important;\r\n  flex-direction: column-reverse !important;\r\n}\r\n",
                    "styleUrl": "../../../../stories/stylesStorybook/_clases.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 16
                    }
                }
            },
            "templateData": "<div [ngClass]=\"sizes\" style=\"width: 100%\">\n  <div>\n    <p>TEXTO DE PUEBA</p>\n  </div>\n  <div style=\"background-color: blue; width: 80px; height: 80px\"></div>\n  <div style=\"background-color: red; width: 80px; height: 80px\"></div>\n  <div style=\"background-color: yellow; width: 80px; height: 80px\"></div>\n</div>\n"
        },
        {
            "name": "ColorsComponent",
            "id": "component-ColorsComponent-deb95710c58e7b2f3322b09b659893b4ece5dc0bb0315978b524f299789b6b349616570931a68b6e54ab1e9a84d6174bd044bb7252e3f25d8c6616c085c09f73",
            "file": "src/stories/components/colors/colors.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors",
            "styleUrls": [
                "../../../stories/stylesStorybook/_colors.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./colors.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-colors',\n  templateUrl: './colors.component.html',\n  styleUrls: ['../../../stories/stylesStorybook/_colors.component.scss'],\n})\nexport class ColorsComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@use \"@angular/material\" as mat;\r\n@import \"../stylesStorybook/palletes\";\r\n\r\n.container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 1rem;\r\n  gap: 0.5rem;\r\n  .pallete-color-container {\r\n    display: flex;\r\n    width: 100%;\r\n    &-text {\r\n      width: 15%;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    &-color {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      padding: 1rem;\r\n      .container-matriz-color {\r\n        width: 100%;\r\n        display: flex;\r\n\r\n        & span {\r\n          flex: 1;\r\n          height: 2rem;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          color: inherit;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.container-matriz-color {\r\n  &-light {\r\n    &.primary-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($primary, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($primary, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($primary, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($primary, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($primary, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($primary, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($primary, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($primary, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($primary, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($primary, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($primary, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($primary, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($primary, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($primary, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($primary, A700);\r\n        }\r\n      }\r\n    }\r\n    &.accent-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($accent, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($accent, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($accent, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($accent, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($accent, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($accent, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($accent, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($accent, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($accent, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($accent, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($accent, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($accent, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($accent, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($accent, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($accent, A700);\r\n        }\r\n      }\r\n    }\r\n    &.warn-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($warn, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($warn, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($warn, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($warn, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($warn, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($warn, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($warn, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($warn, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($warn, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($warn, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($warn, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($warn, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($warn, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($warn, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($warn, A700);\r\n        }\r\n      }\r\n    }\r\n    &.success-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($success, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($success, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($success, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($success, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($success, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($success, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($success, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($success, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($success, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($success, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($success, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($success, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($success, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($success, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($success, A700);\r\n        }\r\n      }\r\n    }\r\n    &.info-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($info, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($info, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($info, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($info, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($info, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($info, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($info, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($info, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($info, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($info, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($info, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($info, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($info, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($info, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($info, A700);\r\n        }\r\n      }\r\n    }\r\n    &.caution-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($caution, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($caution, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($caution, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($caution, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($caution, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($caution, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($caution, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($caution, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($caution, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($caution, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($caution, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($caution, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($caution, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($caution, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($caution, A700);\r\n        }\r\n      }\r\n    }\r\n    &.grey-color {\r\n      .tone {\r\n        &-50 {\r\n          background-color: mat.get-color-from-palette($grey-color, 50);\r\n        }\r\n        &-100 {\r\n          background-color: mat.get-color-from-palette($grey-color, 100);\r\n        }\r\n        &-200 {\r\n          background-color: mat.get-color-from-palette($grey-color, 200);\r\n        }\r\n        &-300 {\r\n          background-color: mat.get-color-from-palette($grey-color, 300);\r\n        }\r\n        &-400 {\r\n          background-color: mat.get-color-from-palette($grey-color, 400);\r\n        }\r\n        &-500 {\r\n          background-color: mat.get-color-from-palette($grey-color, 500);\r\n        }\r\n        &-600 {\r\n          background-color: mat.get-color-from-palette($grey-color, 600);\r\n        }\r\n        &-700 {\r\n          background-color: mat.get-color-from-palette($grey-color, 700);\r\n        }\r\n        &-800 {\r\n          background-color: mat.get-color-from-palette($grey-color, 800);\r\n        }\r\n        &-900 {\r\n          background-color: mat.get-color-from-palette($grey-color, 900);\r\n        }\r\n        &-A100 {\r\n          background-color: mat.get-color-from-palette($grey-color, A100);\r\n        }\r\n        &-A200 {\r\n          background-color: mat.get-color-from-palette($grey-color, A200);\r\n        }\r\n        &-A300 {\r\n          background-color: mat.get-color-from-palette($grey-color, A300);\r\n        }\r\n        &-A400 {\r\n          background-color: mat.get-color-from-palette($grey-color, A400);\r\n        }\r\n        &-A700 {\r\n          background-color: mat.get-color-from-palette($grey-color, A700);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "../../../stories/stylesStorybook/_colors.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container mat-elevation-z1\">\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>primary-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#1e62a1</span></span>\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"\n            container-matriz-color container-matriz-color-light\n            primary-color\n          \"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>accent-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#0cbbe2</span></span>\n\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"container-matriz-color container-matriz-color-light accent-color\"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>warn-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#d14343</span></span>\n\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"container-matriz-color container-matriz-color-light warn-color\"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>success-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#8fc93a</span></span>\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"\n            container-matriz-color container-matriz-color-light\n            success-color\n          \"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>info-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#2d9fc5</span></span>\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"container-matriz-color container-matriz-color-light info-color\"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>caution-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#fb8500</span></span>\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"\n            container-matriz-color container-matriz-color-light\n            caution-color\n          \"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pallete-color-container\">\n      <div class=\"pallete-color-container-text\">\n        <h5>grey-color</h5>\n        <span class=\"mat-h5\">color base: <span class=\"mat-h6\">#C1C4D6</span></span>\n      </div>\n      <div class=\"pallete-color-container-color\">\n        <div\n          class=\"container-matriz-color container-matriz-color-light grey-color\"\n        >\n          <span class=\"tone-50\">50</span>\n          <span class=\"tone-100\">100</span>\n          <span class=\"tone-200\">200</span>\n          <span class=\"tone-300\">300</span>\n          <span class=\"tone-400\">400</span>\n          <span class=\"tone-500\">500</span>\n          <span class=\"tone-600\">600</span>\n          <span class=\"tone-700\">700</span>\n          <span class=\"tone-800\">800</span>\n          <span class=\"tone-900\">900</span>\n          <span class=\"tone-A100\">A100</span>\n          <span class=\"tone-A200\">A200</span>\n          <span class=\"tone-A400\">A400</span>\n          <span class=\"tone-A700\">A700</span>\n        </div>\n      </div>\n    </div>\n</div>\n"
        },
        {
            "name": "ExpansionPanelComponent",
            "id": "component-ExpansionPanelComponent-f7b30dbdd84cb5a301706c3f0fc445aadb08c03305c5766c59dee5c444c8d7397b3af2d3fc8c6e8d5f4de25d8ead8a4be440af23d8116de892a798db5b499191",
            "file": "src/stories/components/expansion-panel/expansion-panel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expansion-panel",
            "styleUrls": [
                "./expansion-panel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expansion-panel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Sizes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ElementRef, OnChanges } from '@angular/core';\r\nimport { Sizes } from '../../assets/model/modelo.model';\r\n@Component({\r\n  selector: 'app-expansion-panel',\r\n  templateUrl: './expansion-panel.component.html',\r\n  styleUrls: ['./expansion-panel.component.scss']\r\n})\r\nexport class ExpansionPanelComponent {\r\n  panelOpenState = false;\r\n  constructor(private el: ElementRef<HTMLElement>) {}\r\n  @Input()\r\n  size!: Sizes;\r\n\r\n  ngOnChanges() {\r\n    this.el.nativeElement.classList.add(this.size);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./expansion-panel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef<HTMLElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"example\">\r\n  <mat-accordion>\r\n    <mat-expansion-panel hideToggle>\r\n      <mat-expansion-panel-header size=\"small\">\r\n        <mat-panel-title> This is the expansion title </mat-panel-title>\r\n        <mat-panel-description>\r\n          This is a summary of the content\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <p>This is the primary content of the panel.</p>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel\r\n      (opened)=\"panelOpenState = true\"\r\n      (closed)=\"panelOpenState = false\"\r\n    >\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title> Self aware panel </mat-panel-title>\r\n        <mat-panel-description>\r\n          Currently I am {{ panelOpenState ? \"open\" : \"closed\" }}\r\n        </mat-panel-description>\r\n      </mat-expansion-panel-header>\r\n      <p>I'm visible because I am open</p>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-50df445b7f4d35bb007963fa951f871b4f65db482eafa05e53a54f854194f4768c7c0887407ef371d25149505b709a6c7b8f80455c45947465d7a39b67bfdaad",
            "file": "src/stories/components/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-form-field",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "\"fill\" | \"outline\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-form-field',\n  templateUrl: './form-field.component.html',\n})\nexport class FormFieldComponent {\n  @Input() appearance!: 'fill' | 'outline';\n\n  @Input() size!: string;\n\n  public get Appearance(): string[] {\n    return [`${this.appearance}`];\n  }\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "Appearance": {
                    "name": "Appearance",
                    "getSignature": {
                        "name": "Appearance",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                },
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<mat-form-field [appearance]=\"appearance\" [ngClass]=\"sizes\">\n  <mat-label>form field</mat-label>\n  <input matInput placeholder=\"Placeholder\" />\n</mat-form-field>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-9645e0f6c4a44b3fb9ea67d538e46ab43b813a6be7f7781ee5513d8f2ae12ecd5f6c063f0dd93c1cedadaf1285009a91404ace9104eeb7228408d9f807920852",
            "file": "src/stories/components/mat-icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Mat-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-icon [ngClass]=\"sizes\">home</mat-icon>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-icon',\r\n  template: `<mat-icon [ngClass]=\"sizes\">home</mat-icon> `,\r\n})\r\nexport class IconComponent {\r\n  @Input() size!: string;\r\n  @Input() color!: string;\r\n\r\n  public get sizes(): string[] {\r\n    return [`${this.size}`, `mat-icon--${this.color}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 11
                    }
                }
            }
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-77bffb0c9e1ffbeaae636b90d1fdfa63101bd3d99bdedf41ad4fb95cce3bbe9a339935d94de691c858f4a6a63ce8cb614cbead89c67e4b48a4231adc006b4357-1",
            "file": "src/stories/components/Clases/icons/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [
                "../../../../stories/stylesStorybook/_clases.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "filled",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "outline",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "two_tone",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['../../../../stories/stylesStorybook/_clases.scss'],\n\n})\nexport class IconComponent {\n  @Input()\n  filled = ' - ';\n  outline = ' - ';\n  two_tone = ' - ';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".p {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.icon-container {\r\n  margin-top: 0.5rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.layout {\r\n  display: flex;\r\n  gap: 8px !important;\r\n  width: 50%;\r\n  // height: 25%;\r\n}\r\n.sizes--d-flex {\r\n  display: flex !important;\r\n}\r\n.sizes--d-grid {\r\n  display: grid !important;\r\n}\r\n.sizes--d-block {\r\n  display: block !important;\r\n}\r\n.sizes--d-none {\r\n  display: none !important;\r\n}\r\n.sizes--d-inline {\r\n  display: inline !important;\r\n}\r\n.sizes--help {\r\n  cursor: help !important;\r\n}\r\n.sizes--progress {\r\n  cursor: progress !important;\r\n}\r\n.sizes--wait {\r\n  cursor: wait !important;\r\n}\r\n.sizes--text {\r\n  cursor: text !important;\r\n}\r\n.sizes--not_allowed {\r\n  cursor: not-allowed !important;\r\n}\r\n.sizes--pointer {\r\n  cursor: pointer !important;\r\n}\r\n.sizes--opacity-0 {\r\n  opacity: 0 !important;\r\n}\r\n.sizes--opacity-25 {\r\n  opacity: 0.25 !important;\r\n}\r\n.sizes--opacity-50 {\r\n  opacity: 0.5 !important;\r\n}\r\n.sizes--opacity-75 {\r\n  opacity: 0.75 !important;\r\n}\r\n.sizes--opacity-100 {\r\n  opacity: 1 !important;\r\n}\r\n.sizes--absolute {\r\n  position: absolute !important;\r\n}\r\n.sizes--relative {\r\n  position: relative !important;\r\n}\r\n.sizes--sticky {\r\n  position: sticky !important;\r\n}\r\n.sizes--static {\r\n  position: static !important;\r\n}\r\n.sizes--fixed {\r\n  position: fixed !important;\r\n}\r\n.sizes--s-none {\r\n  box-shadow: none !important;\r\n}\r\n.sizes--text-align-left {\r\n  text-align: left !important;\r\n}\r\n.sizes--text-align-center {\r\n  text-align: center !important;\r\n}\r\n.sizes--text-align-right {\r\n  text-align: right !important;\r\n}\r\n.sizes--none {\r\n  cursor: none !important;\r\n}\r\n.custom-align-items_center {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n}\r\n.custom-align-items_start {\r\n  display: flex !important;\r\n  align-items: start !important;\r\n}\r\n.custom-align-items_end {\r\n  display: flex !important;\r\n  align-items: end !important;\r\n}\r\n.custom-align_items_baseline {\r\n  display: flex !important;\r\n  align-items: baseline !important;\r\n}\r\n.custom-align_items_stretch {\r\n  display: flex !important;\r\n  align-items: stretch !important;\r\n}\r\n.custom-wrap {\r\n  display: flex !important;\r\n  flex-wrap: wrap !important;\r\n}\r\n.custom-nowrap {\r\n  display: flex !important;\r\n  flex-wrap: nowrap !important;\r\n}\r\n.custom-column {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n}\r\n.custom-row_reverse {\r\n  display: flex !important;\r\n  flex-direction: row-reverse !important;\r\n}\r\n.custom-column_reverse {\r\n  display: flex !important;\r\n  flex-direction: column-reverse !important;\r\n}\r\n",
                    "styleUrl": "../../../../stories/stylesStorybook/_clases.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "IconComponent-1",
            "templateData": "<div>\n  <div class=\"p\">\n    <h6>\n      La clase icono configura y modifica la apariencia de los iconos, esto a\n      partir de su contorno y relleno.\n    </h6>\n  </div>\n  <div class=\"icon-container\">\n    <div class=\"text\">\n      <h6>Icon Filled:</h6>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"2rem\"\n        viewBox=\"0 0 24 24\"\n        width=\"2rem\"\n        fill=\"#000000\"\n        class=\"icon-img\"\n      >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </svg>\n    </div>\n    <div class=\"text\">\n      <h6 class=\"text\">Icon Outline:</h6>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"2rem\"\n        viewBox=\"0 0 24 24\"\n        width=\"2rem\"\n        fill=\"#000000\"\n      >\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n        <path\n          d=\"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\"\n        />\n      </svg>\n    </div>\n    <div class=\"text\">\n      <h6>Icon Two-tone:</h6>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"2rem\"\n        viewBox=\"0 0 24 24\"\n        width=\"2rem\"\n        fill=\"#000000\"\n      >\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n        <path\n          d=\"M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3zm5 15h-2v-6H9v6H7v-7.81l5-4.5 5 4.5V18z\"\n        />\n        <path d=\"M7 10.19V18h2v-6h6v6h2v-7.81l-5-4.5z\" opacity=\".3\" />\n      </svg>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-817d489410cac3eb7884c4528e976036b48cb7832fe3990588fdb08f413a08fe7bf820db90ca1d6bd4106120b3fe80d6f0c5d66a027116ccb7d7ae8402aa4868",
            "file": "src/stories/components/Clases/layoutt/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "../../../../stories/stylesStorybook/_clases.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "flex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "grid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "justify",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['../../../../stories/stylesStorybook/_clases.scss'],\r\n})\r\nexport class LayoutComponent {\r\n  @Input() items!: string;\r\n  @Input() grid!: string;\r\n  @Input() flex!: string;\r\n  @Input() column!: string;\r\n  @Input() justify!: string;\r\n\r\n  public get custom(): string[] {\r\n    return [\r\n      `custom-${this.items}`,\r\n      `custom-${this.grid}`,\r\n      `custom-${this.flex}`,\r\n      `custom-${this.column}`,\r\n      `custom-${this.justify}`,\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".p {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.icon-container {\r\n  margin-top: 0.5rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.layout {\r\n  display: flex;\r\n  gap: 8px !important;\r\n  width: 50%;\r\n  // height: 25%;\r\n}\r\n.sizes--d-flex {\r\n  display: flex !important;\r\n}\r\n.sizes--d-grid {\r\n  display: grid !important;\r\n}\r\n.sizes--d-block {\r\n  display: block !important;\r\n}\r\n.sizes--d-none {\r\n  display: none !important;\r\n}\r\n.sizes--d-inline {\r\n  display: inline !important;\r\n}\r\n.sizes--help {\r\n  cursor: help !important;\r\n}\r\n.sizes--progress {\r\n  cursor: progress !important;\r\n}\r\n.sizes--wait {\r\n  cursor: wait !important;\r\n}\r\n.sizes--text {\r\n  cursor: text !important;\r\n}\r\n.sizes--not_allowed {\r\n  cursor: not-allowed !important;\r\n}\r\n.sizes--pointer {\r\n  cursor: pointer !important;\r\n}\r\n.sizes--opacity-0 {\r\n  opacity: 0 !important;\r\n}\r\n.sizes--opacity-25 {\r\n  opacity: 0.25 !important;\r\n}\r\n.sizes--opacity-50 {\r\n  opacity: 0.5 !important;\r\n}\r\n.sizes--opacity-75 {\r\n  opacity: 0.75 !important;\r\n}\r\n.sizes--opacity-100 {\r\n  opacity: 1 !important;\r\n}\r\n.sizes--absolute {\r\n  position: absolute !important;\r\n}\r\n.sizes--relative {\r\n  position: relative !important;\r\n}\r\n.sizes--sticky {\r\n  position: sticky !important;\r\n}\r\n.sizes--static {\r\n  position: static !important;\r\n}\r\n.sizes--fixed {\r\n  position: fixed !important;\r\n}\r\n.sizes--s-none {\r\n  box-shadow: none !important;\r\n}\r\n.sizes--text-align-left {\r\n  text-align: left !important;\r\n}\r\n.sizes--text-align-center {\r\n  text-align: center !important;\r\n}\r\n.sizes--text-align-right {\r\n  text-align: right !important;\r\n}\r\n.sizes--none {\r\n  cursor: none !important;\r\n}\r\n.custom-align-items_center {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n}\r\n.custom-align-items_start {\r\n  display: flex !important;\r\n  align-items: start !important;\r\n}\r\n.custom-align-items_end {\r\n  display: flex !important;\r\n  align-items: end !important;\r\n}\r\n.custom-align_items_baseline {\r\n  display: flex !important;\r\n  align-items: baseline !important;\r\n}\r\n.custom-align_items_stretch {\r\n  display: flex !important;\r\n  align-items: stretch !important;\r\n}\r\n.custom-wrap {\r\n  display: flex !important;\r\n  flex-wrap: wrap !important;\r\n}\r\n.custom-nowrap {\r\n  display: flex !important;\r\n  flex-wrap: nowrap !important;\r\n}\r\n.custom-column {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n}\r\n.custom-row_reverse {\r\n  display: flex !important;\r\n  flex-direction: row-reverse !important;\r\n}\r\n.custom-column_reverse {\r\n  display: flex !important;\r\n  flex-direction: column-reverse !important;\r\n}\r\n",
                    "styleUrl": "../../../../stories/stylesStorybook/_clases.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "custom": {
                    "name": "custom",
                    "getSignature": {
                        "name": "custom",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            },
            "templateData": "<div class=\"ejemplo\">\n  <div [ngClass]=\"custom\" class=\"layout\">\n    <div style=\"background-color: blue; width: 80px; height: 80px\"></div>\n    <div style=\"background-color: red; width: 80px; height: 100px\"></div>\n    <div style=\"background-color: yellow; width: 80px; height: 120px\"></div>\n  </div>\n</div>\n"
        },
        {
            "name": "MatChipComponent",
            "id": "component-MatChipComponent-de36d33d824b5acb4b99cb3a3f56de6e0705785e4dd42a0ed11e4431aceba5a668b326c0f62bde89e97454ddd16d78ceecf4080d1b975d0dbdea5b99f15156bb",
            "file": "src/stories/components/mat-chip/mat-chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Mat-chip",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-chip color=\"primary\" [ngClass]=\"sizes\">{{    label\n  }}</mat-chip>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-chip',\r\n  template: `<mat-chip color=\"primary\" [ngClass]=\"sizes\">{{\r\n    label\r\n  }}</mat-chip>`,\r\n})\r\nexport class MatChipComponent {\r\n  @Input() size!: string;\r\n  @Input() label!: string;\r\n  public get sizes(): string[] {\r\n    return [`${this.size}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "MatListComponent",
            "id": "component-MatListComponent-5f5b5ad021c254446db6e830e79afa65d120589d6d481f4bc73ea9876181e24444fca42429151e9c846411549ae4a8edfcfac224fa6b7c0c4fe44650e6673a0c",
            "file": "src/stories/components/mat-list/mat-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-list",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-list role=\"list\" [ngClass]=\"sizes\">    <mat-list-item role=\"listitem\">Item 1</mat-list-item>\n    <mat-list-item role=\"listitem\">Item 2</mat-list-item>\n    <mat-list-item role=\"listitem\">Item 3</mat-list-item>\n  </mat-list>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n@Component({\n  selector: 'app-list',\n  template: `<mat-list role=\"list\" [ngClass]=\"sizes\">\n    <mat-list-item role=\"listitem\">Item 1</mat-list-item>\n    <mat-list-item role=\"listitem\">Item 2</mat-list-item>\n    <mat-list-item role=\"listitem\">Item 3</mat-list-item>\n  </mat-list>`,\n})\nexport class MatListComponent {\n  @Input() size!: string;\n\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "MatMenuComponent",
            "id": "component-MatMenuComponent-b0893cdbcda329f8c8c1bc21cc1fbfc6e3283021945b85050d17c66daf9c173fef0b52d9f19980acfae20f3a48e73203dc4789a93f67c426df046cdaace3342f",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [ngClass]=\"sizes\">Item 1</button>\n    <button mat-menu-item [ngClass]=\"sizes\">Item 2</button>\n  </mat-menu>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mat-menu',\n  template: `<button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item [ngClass]=\"sizes\">Item 1</button>\n    <button mat-menu-item [ngClass]=\"sizes\">Item 2</button>\n  </mat-menu>\n  `,\n})\nexport class MatMenuComponent {\n  @Input() size!: string;\n\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 15
                    }
                }
            }
        },
        {
            "name": "MatTabsComponent",
            "id": "component-MatTabsComponent-03291ebb19c9128952ba2363d0e87571206169ff783e408527e86c4dc85f7a14846be3bf087d4a516d71bf3cf481e6cd4d87f5776e62cc8555f12d9ffb754e17",
            "file": "src/stories/components/mat-tabs/mat-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-tabs",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-tab-group [ngClass]=\"colors\">    <mat-tab label=\"First\">Content 1</mat-tab>\n    <mat-tab label=\"Second\">Content 2</mat-tab>\n    <mat-tab label=\"Third\">Content 3</mat-tab>\n  </mat-tab-group>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-mat-tabs',\n  template: `<mat-tab-group [ngClass]=\"colors\">\n    <mat-tab label=\"First\">Content 1</mat-tab>\n    <mat-tab label=\"Second\">Content 2</mat-tab>\n    <mat-tab label=\"Third\">Content 3</mat-tab>\n  </mat-tab-group> `,\n})\nexport class MatTabsComponent {\n  @Input() color!: string;\n\n  public get colors(): string[] {\n    return [`tabs-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "colors": {
                    "name": "colors",
                    "getSignature": {
                        "name": "colors",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            }
        },
        {
            "name": "ProgressSpinnerComponent",
            "id": "component-ProgressSpinnerComponent-83895844911f8062e3c235d7d160e0cc08d44b666faf3af24d0df210ce7e14d4d1c729e9f01fe37e21021dcc65de420469e25c0a20177c2d9292dc507873645b",
            "file": "src/stories/components/progress-spinner/progress-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-progress-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-spinner [ngClass]=\"colors\"></mat-spinner>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-spinner',\n  template: `<mat-spinner [ngClass]=\"colors\"></mat-spinner> `,\n})\nexport class ProgressSpinnerComponent {\n  @Input()\n  color!: string;\n\n  public get colors(): string[] {\n    return [`spinner-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "colors": {
                    "name": "colors",
                    "getSignature": {
                        "name": "colors",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 11
                    }
                }
            }
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-265125c48c9c3dfe3ceefae304c00b770856f5e8d021f75a3691fa90319e4d1f41742fede9393674868b6e1a9d176579a5aa0a22ec910c286477ef96fa6005a9",
            "file": "src/stories/components/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-button",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-radio-button [ngClass]=\"sizes\">Option</mat-radio-button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n@Component({\r\n  selector: 'radio-button',\r\n  template: `<mat-radio-button [ngClass]=\"sizes\">Option</mat-radio-button> `,\r\n})\r\nexport class RadioButtonComponent {\r\n  @Input() size!: string;\r\n\r\n  public get sizes(): string[] {\r\n    return [`${this.size}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 9
                    }
                }
            }
        },
        {
            "name": "ResponsiveComponent",
            "id": "component-ResponsiveComponent-03d336fb5f6a5f850e78c0bac287311526c46f8f41d3b02a33059733ee653f8bbb86afe07ec86057e694b42161b335315d908385b8ad6f6ba7674a04e357b45e",
            "file": "src/stories/components/Clases/responsive/responsive.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-responsive",
            "styleUrls": [
                "../../../../stories/stylesStorybook/_clases.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./responsive.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "MiniMobile",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Desktop",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Laptop",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Mobile",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Monitor",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "Tablet",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-responsive',\n  templateUrl: './responsive.component.html',\n  styleUrls: ['../../../../stories/stylesStorybook/_clases.scss'],\n})\nexport class ResponsiveComponent {\n  @Input()\n  MiniMobile = ' - ';\n  Mobile = ' - ';\n  Tablet = ' - ';\n  Laptop = ' - ';\n  Desktop = ' - ';\n  Monitor = ' - ';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".p {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.icon-container {\r\n  margin-top: 0.5rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.layout {\r\n  display: flex;\r\n  gap: 8px !important;\r\n  width: 50%;\r\n  // height: 25%;\r\n}\r\n.sizes--d-flex {\r\n  display: flex !important;\r\n}\r\n.sizes--d-grid {\r\n  display: grid !important;\r\n}\r\n.sizes--d-block {\r\n  display: block !important;\r\n}\r\n.sizes--d-none {\r\n  display: none !important;\r\n}\r\n.sizes--d-inline {\r\n  display: inline !important;\r\n}\r\n.sizes--help {\r\n  cursor: help !important;\r\n}\r\n.sizes--progress {\r\n  cursor: progress !important;\r\n}\r\n.sizes--wait {\r\n  cursor: wait !important;\r\n}\r\n.sizes--text {\r\n  cursor: text !important;\r\n}\r\n.sizes--not_allowed {\r\n  cursor: not-allowed !important;\r\n}\r\n.sizes--pointer {\r\n  cursor: pointer !important;\r\n}\r\n.sizes--opacity-0 {\r\n  opacity: 0 !important;\r\n}\r\n.sizes--opacity-25 {\r\n  opacity: 0.25 !important;\r\n}\r\n.sizes--opacity-50 {\r\n  opacity: 0.5 !important;\r\n}\r\n.sizes--opacity-75 {\r\n  opacity: 0.75 !important;\r\n}\r\n.sizes--opacity-100 {\r\n  opacity: 1 !important;\r\n}\r\n.sizes--absolute {\r\n  position: absolute !important;\r\n}\r\n.sizes--relative {\r\n  position: relative !important;\r\n}\r\n.sizes--sticky {\r\n  position: sticky !important;\r\n}\r\n.sizes--static {\r\n  position: static !important;\r\n}\r\n.sizes--fixed {\r\n  position: fixed !important;\r\n}\r\n.sizes--s-none {\r\n  box-shadow: none !important;\r\n}\r\n.sizes--text-align-left {\r\n  text-align: left !important;\r\n}\r\n.sizes--text-align-center {\r\n  text-align: center !important;\r\n}\r\n.sizes--text-align-right {\r\n  text-align: right !important;\r\n}\r\n.sizes--none {\r\n  cursor: none !important;\r\n}\r\n.custom-align-items_center {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n}\r\n.custom-align-items_start {\r\n  display: flex !important;\r\n  align-items: start !important;\r\n}\r\n.custom-align-items_end {\r\n  display: flex !important;\r\n  align-items: end !important;\r\n}\r\n.custom-align_items_baseline {\r\n  display: flex !important;\r\n  align-items: baseline !important;\r\n}\r\n.custom-align_items_stretch {\r\n  display: flex !important;\r\n  align-items: stretch !important;\r\n}\r\n.custom-wrap {\r\n  display: flex !important;\r\n  flex-wrap: wrap !important;\r\n}\r\n.custom-nowrap {\r\n  display: flex !important;\r\n  flex-wrap: nowrap !important;\r\n}\r\n.custom-column {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n}\r\n.custom-row_reverse {\r\n  display: flex !important;\r\n  flex-direction: row-reverse !important;\r\n}\r\n.custom-column_reverse {\r\n  display: flex !important;\r\n  flex-direction: column-reverse !important;\r\n}\r\n",
                    "styleUrl": "../../../../stories/stylesStorybook/_clases.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <div class=\"p\">\n    <h6>\n      Los puntos de interrupción son usados para controlar cuándo puede\n      adaptarse el diseño a una ventana gráfica o tamaño de dispositivo\n      concretos, para la implementación se hace uso de las Media Queries con un\n      min-width.\n    </h6>\n  </div>\n</div>\n"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-f6e9a3f9b41abd0e535a2224444390e12f6e42e692f8d4c170081c41aea58d07c13ba3d1fd91d17204e9c46248b18e2041a248fadb82ab63cf03312446585057",
            "file": "src/stories/components/mat-slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "Mat-slider",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-slider [ngClass]=\"sizes\"    ><input matSliderThumb\n  /></mat-slider>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-slider',\r\n  template: `<mat-slider [ngClass]=\"sizes\"\r\n    ><input matSliderThumb\r\n  /></mat-slider>`,\r\n})\r\nexport class SliderComponent {\r\n  @Input() size!: string;\r\n  @Input() color!: string;\r\n  public get sizes(): string[] {\r\n    return [`${this.size}`, `slider--${this.color}`];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 12
                    }
                }
            }
        },
        {
            "name": "SlideToggleComponent",
            "id": "component-SlideToggleComponent-2e91e61e4599e1ed49ad7217d74d268426dbd4a02e61dfa228cf304ee47dc80136d903e439ed7e803040d72553ffcefb0038fc8274d19432bd86047df8e54a53",
            "file": "src/stories/components/mat-slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide-toggle",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-slide-toggle [ngClass]=\"sizes\">{{    label\n  }}</mat-slide-toggle>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-slide-toggle',\n  template: `<mat-slide-toggle [ngClass]=\"sizes\">{{\n    label\n  }}</mat-slide-toggle> `,\n})\nexport class SlideToggleComponent {\n  @Input() size!: string;\n  @Input() label!: string;\n  @Input() color!: string;\n\n  public get sizes(): string[] {\n    return [`${this.size}`, `slide-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            }
        },
        {
            "name": "SnackbarComponent",
            "id": "component-SnackbarComponent-cf853bae0d75e82d57e017b71b83403fe46886e3ff35516d1e6839182e057a0add7f045633cae345aa266925a35c6f37dda6aa69c071f846e6a55cc2ec40da00",
            "file": "src/stories/components/snackbar/snackbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-snackbar",
            "styleUrls": [
                "./snackbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./snackbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.scss']\r\n})\r\nexport class SnackbarComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./snackbar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>snackbar works!</p>\r\n"
        },
        {
            "name": "SpacingComponent",
            "id": "component-SpacingComponent-087e78483d1b50aab0a159f751d0b079a766653def5aba43195193ecef499887ef173663e2ad09e59a67e85725cdd9196611f2572af5a29ce65eaadb5b06c3b5",
            "file": "src/stories/components/Clases/spacing/spacing.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spacing",
            "styleUrls": [
                "../../../../stories/stylesStorybook/_clases.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./spacing.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "m",
                    "defaultValue": "'-'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "$spacing_0",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "$spacing_1",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "$spacing_2",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "$spacing_3",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "$spacing_4",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "$spacing_5",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "$spacing_6",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "$spacing_7",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "mb",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "ml",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "mr",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "mt",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "mx",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "my",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "p",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pb",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pl",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "pr",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "pt",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "px",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "py",
                    "defaultValue": "' - '",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-spacing',\n  templateUrl: './spacing.component.html',\n  styleUrls: ['../../../../stories/stylesStorybook/_clases.scss'],\n})\nexport class SpacingComponent {\n  @Input()\n  m = '-';\n  my = ' - ';\n  mx = ' - ';\n  mt = ' - ';\n  mb = ' - ';\n  ml = ' - ';\n  mr = ' - ';\n  p = ' - ';\n  py = ' - ';\n  px = ' - ';\n  pt = ' - ';\n  pb = ' - ';\n  pl = ' - ';\n  pr = ' - ';\n  $spacing_0 = ' - ';\n  $spacing_1 = ' - ';\n  $spacing_2 = ' - ';\n  $spacing_3 = ' - ';\n  $spacing_4 = ' - ';\n  $spacing_5 = ' - ';\n  $spacing_6 = ' - ';\n  $spacing_7 = ' - ';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".p {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.icon-container {\r\n  margin-top: 0.5rem;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n.text {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.layout {\r\n  display: flex;\r\n  gap: 8px !important;\r\n  width: 50%;\r\n  // height: 25%;\r\n}\r\n.sizes--d-flex {\r\n  display: flex !important;\r\n}\r\n.sizes--d-grid {\r\n  display: grid !important;\r\n}\r\n.sizes--d-block {\r\n  display: block !important;\r\n}\r\n.sizes--d-none {\r\n  display: none !important;\r\n}\r\n.sizes--d-inline {\r\n  display: inline !important;\r\n}\r\n.sizes--help {\r\n  cursor: help !important;\r\n}\r\n.sizes--progress {\r\n  cursor: progress !important;\r\n}\r\n.sizes--wait {\r\n  cursor: wait !important;\r\n}\r\n.sizes--text {\r\n  cursor: text !important;\r\n}\r\n.sizes--not_allowed {\r\n  cursor: not-allowed !important;\r\n}\r\n.sizes--pointer {\r\n  cursor: pointer !important;\r\n}\r\n.sizes--opacity-0 {\r\n  opacity: 0 !important;\r\n}\r\n.sizes--opacity-25 {\r\n  opacity: 0.25 !important;\r\n}\r\n.sizes--opacity-50 {\r\n  opacity: 0.5 !important;\r\n}\r\n.sizes--opacity-75 {\r\n  opacity: 0.75 !important;\r\n}\r\n.sizes--opacity-100 {\r\n  opacity: 1 !important;\r\n}\r\n.sizes--absolute {\r\n  position: absolute !important;\r\n}\r\n.sizes--relative {\r\n  position: relative !important;\r\n}\r\n.sizes--sticky {\r\n  position: sticky !important;\r\n}\r\n.sizes--static {\r\n  position: static !important;\r\n}\r\n.sizes--fixed {\r\n  position: fixed !important;\r\n}\r\n.sizes--s-none {\r\n  box-shadow: none !important;\r\n}\r\n.sizes--text-align-left {\r\n  text-align: left !important;\r\n}\r\n.sizes--text-align-center {\r\n  text-align: center !important;\r\n}\r\n.sizes--text-align-right {\r\n  text-align: right !important;\r\n}\r\n.sizes--none {\r\n  cursor: none !important;\r\n}\r\n.custom-align-items_center {\r\n  display: flex !important;\r\n  align-items: center !important;\r\n}\r\n.custom-align-items_start {\r\n  display: flex !important;\r\n  align-items: start !important;\r\n}\r\n.custom-align-items_end {\r\n  display: flex !important;\r\n  align-items: end !important;\r\n}\r\n.custom-align_items_baseline {\r\n  display: flex !important;\r\n  align-items: baseline !important;\r\n}\r\n.custom-align_items_stretch {\r\n  display: flex !important;\r\n  align-items: stretch !important;\r\n}\r\n.custom-wrap {\r\n  display: flex !important;\r\n  flex-wrap: wrap !important;\r\n}\r\n.custom-nowrap {\r\n  display: flex !important;\r\n  flex-wrap: nowrap !important;\r\n}\r\n.custom-column {\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n}\r\n.custom-row_reverse {\r\n  display: flex !important;\r\n  flex-direction: row-reverse !important;\r\n}\r\n.custom-column_reverse {\r\n  display: flex !important;\r\n  flex-direction: column-reverse !important;\r\n}\r\n",
                    "styleUrl": "../../../../stories/stylesStorybook/_clases.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div>\n  <div class=\"p\">\n    <h6>\n      El espaciado se usa en las clases margen y relleno, esto al modificar el\n      tamaño que pueden tener dichas propiedades aumentando en 0.4rem\n    </h6>\n  </div>\n</div>\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-1c2159cab95b5f162d46ab5ac9a1e3500e625706e8b77d1debb93b6c38503e1d769ab3f9647f7e38ecdce7ab381d9943a2040af848e034a953ee9e076fabe017",
            "file": "src/stories/components/mat-stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stepper",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-stepper    class=\"example-stepper\"\n    [orientation]=\"(stepperOrientation | async)!\"\n    [ngClass]=\"sizes\"\n  >\n    <mat-step [stepControl]=\"firstFormGroup\" label=\"Fill out your name\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input\n            matInput\n            placeholder=\"Last name, First name\"\n            formControlName=\"firstCtrl\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Fill out your address\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <input\n            matInput\n            formControlName=\"secondCtrl\"\n            placeholder=\"Ex. 1 Main St, New York, NY\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Fill out your phone number\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone number</mat-label>\n          <input\n            matInput\n            formControlName=\"thirdCtrl\"\n            placeholder=\"Ex. 12345678\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n  </mat-stepper>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "stepperOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<StepperOrientation>",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "thirdFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    thirdCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { BreakpointObserver } from '@angular/cdk/layout';\nimport { StepperOrientation } from '@angular/cdk/stepper';\nimport { Component, Input } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-stepper',\n  template: `<mat-stepper\n    class=\"example-stepper\"\n    [orientation]=\"(stepperOrientation | async)!\"\n    [ngClass]=\"sizes\"\n  >\n    <mat-step [stepControl]=\"firstFormGroup\" label=\"Fill out your name\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input\n            matInput\n            placeholder=\"Last name, First name\"\n            formControlName=\"firstCtrl\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Fill out your address\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <input\n            matInput\n            formControlName=\"secondCtrl\"\n            placeholder=\"Ex. 1 Main St, New York, NY\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Fill out your phone number\">\n      <form>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Phone number</mat-label>\n          <input\n            matInput\n            formControlName=\"thirdCtrl\"\n            placeholder=\"Ex. 12345678\"\n            required\n          />\n        </mat-form-field>\n        <div>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n  </mat-stepper>`,\n})\nexport class StepperComponent {\n  firstFormGroup = this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  });\n  secondFormGroup = this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  });\n  thirdFormGroup = this._formBuilder.group({\n    thirdCtrl: ['', Validators.required],\n  });\n  stepperOrientation: Observable<StepperOrientation>;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    breakpointObserver: BreakpointObserver\n  ) {\n    this.stepperOrientation = breakpointObserver\n      .observe('(min-width: 800px)')\n      .pipe(map(({ matches }) => (matches ? 'horizontal' : 'vertical')));\n  }\n\n  @Input() color!: string;\n  public get sizes(): string[] {\n    return [`stepper--${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 76,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 88
                    }
                }
            }
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-68c4c52ac760582e5cd6cee4d59ee52f9327fdac6bf31f01a1bbd80ce05f12a6f945599a1d522f398262f99255bd7f8c55cd6bfca1cc1e9532e9196af8283ad9",
            "file": "src/stories/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n];\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n})\nexport class TableComponent {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  @Input()\n  size!: string;\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<table\n  mat-table\n  [ngClass]=\"sizes\"\n  [dataSource]=\"dataSource\"\n  class=\"mat-elevation-z8\"\n>\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef>No.</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.position }}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef>Weight</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.weight }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef>Symbol</th>\n    <td mat-cell *matCellDef=\"let element\">{{ element.symbol }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n</table>\n"
        },
        {
            "name": "TipografiaComponent",
            "id": "component-TipografiaComponent-209f69918cefca6aa70a353def8bbda3e588a1f5b43d2a15d84718752cd9302379fec944b89111b2a515e6c6407a635d42fc06e8b70cf004a2d2112358d968a1",
            "file": "src/stories/components/tipografia/tipografia.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tipografia",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tipografia.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tipografia',\n  templateUrl: './tipografia.component.html',\n})\nexport class TipografiaComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "\r\n\r\n<div style=\"display: flex; align-items: center; flex-direction: column; gap: 6px;  flex-wrap: wrap;\">\r\n    <span class=\"mat-body-2\">body-2</span>\r\n    <span class=\"mat-body-1\">body-1</span>\r\n    <span class=\"mat-subtitle-1\">subtitle-1</span>\r\n    <span class=\"mat-subtitle-2\">subtitle-2</span>\r\n    <span class=\"mat-caption\">caption</span>\r\n    <span class=\"mat-overline\">overline</span>\r\n    <span class=\"mat-headline-5\">H1</span>\r\n    <span class=\"mat-headline-6\">H2</span>\r\n    <span class=\"mat-h3\">H3</span>\r\n    <span class=\"mat-h4\">H4</span>\r\n    <span class=\"mat-h5\">H5</span>\r\n    <span class=\"mat-h6\">H6</span>\r\n</div>"
        },
        {
            "name": "TogglebuttonComponent",
            "id": "component-TogglebuttonComponent-2307a4e247a3d083af7a3e7266c04e99204b6b52ef08cf5565bb5b6bb5c53532d2b5ace7cf2a9cb821fdcfdd204a5361122364cdf82ddf516addc344b6bf5f69",
            "file": "src/stories/components/mat-toggle-button/togglebutton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button-toggle-group",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-button-toggle-group    [ngClass]=\"sizes\"\n    #group=\"matButtonToggleGroup\"\n  >\n    <mat-button-toggle value=\"left\" aria-label=\"Text align left\">\n      <mat-icon>format_align_left</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"center\" aria-label=\"Text align center\">\n      <mat-icon>format_align_center</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"right\" aria-label=\"Text align right\">\n      <mat-icon>format_align_right</mat-icon>\n    </mat-button-toggle>\n  </mat-button-toggle-group>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'button-toggle-group',\n  template: `<mat-button-toggle-group\n    [ngClass]=\"sizes\"\n    #group=\"matButtonToggleGroup\"\n  >\n    <mat-button-toggle value=\"left\" aria-label=\"Text align left\">\n      <mat-icon>format_align_left</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"center\" aria-label=\"Text align center\">\n      <mat-icon>format_align_center</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"right\" aria-label=\"Text align right\">\n      <mat-icon>format_align_right</mat-icon>\n    </mat-button-toggle>\n  </mat-button-toggle-group> `,\n})\nexport class TogglebuttonComponent {\n  @Input() size!: string;\n\n  public get sizes(): string[] {\n    return [`${this.size}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 23
                    }
                }
            }
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-6312bbfedcf34ccd53a3e750208175ea54b6ee4aea83924bfeb8d361d0951e62575c7caf0c587e69d1c884f09c951ece014c8973d6d9e4c1cbec34f87344fd89",
            "file": "src/stories/components/mat-toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [],
            "styles": [],
            "template": "<mat-toolbar [ngClass]=\"sizes\" color=\"primary\">   <button\n     mat-icon-button\n     class=\"example-icon\"\n     aria-label=\"Example icon-button with menu icon\"\n   >\n     <mat-icon>menu</mat-icon>\n   </button>\n   <span style=\"font-size: 20px;\"> Toolbar</span>\n   <span class=\"example-spacer\"></span>\n   <button\n     mat-icon-button\n     class=\"example-icon favorite-icon\"\n     aria-label=\"Example icon-button with heart icon\"\n   >\n     <mat-icon>favorite</mat-icon>\n   </button>\n   <button\n     mat-icon-button\n     class=\"example-icon\"\n     aria-label=\"Example icon-button with share icon\"\n   >\n     <mat-icon>share</mat-icon>\n   </button>\n </mat-toolbar>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  template: ` <mat-toolbar [ngClass]=\"sizes\" color=\"primary\">\n    <button\n      mat-icon-button\n      class=\"example-icon\"\n      aria-label=\"Example icon-button with menu icon\"\n    >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span style=\"font-size: 20px;\"> Toolbar</span>\n    <span class=\"example-spacer\"></span>\n    <button\n      mat-icon-button\n      class=\"example-icon favorite-icon\"\n      aria-label=\"Example icon-button with heart icon\"\n    >\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      class=\"example-icon\"\n      aria-label=\"Example icon-button with share icon\"\n    >\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>`,\n})\nexport class ToolbarComponent {\n  @Input() color!: string;\n\n  public get sizes(): string[] {\n    return [`toolbar-${this.color}`];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 34
                    }
                }
            }
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-9f7affbeedf21de0ad098697891f93da6419eb90e0c36d30a60e6da926cada8ff2e19beda81d926c17b97157b8a3ea3214f22df9f9feea786058bfa2f6f072b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { SizeDirective } from 'src/theme/size.directive';\r\n\r\nimport { ButtonComponent } from 'src/stories/components/mat-button/button.component';\r\nimport { MatChipComponent } from 'src/stories/components/mat-chip/mat-chip.component';\r\nimport { IconComponent } from 'src/stories/components/mat-icon/icon.component';\r\nimport { SliderComponent } from 'src/stories/components/mat-slider/slider.component';\r\nimport { StepperComponent } from 'src/stories/components/mat-stepper/stepper.component';\r\nimport { ToolbarComponent } from 'src/stories/components/mat-toolbar/toolbar.component';\r\nimport { TogglebuttonComponent } from 'src/stories/components/mat-toggle-button/togglebutton.component';\r\nimport { SlideToggleComponent } from 'src/stories/components/mat-slide-toggle/slide-toggle.component';\r\nimport { MatTabsComponent } from 'src/stories/components/mat-tabs/mat-tabs.component';\r\nimport { RadioButtonComponent } from 'src/stories/components/radio-button/radio-button.component';\r\nimport { FormFieldComponent } from 'src/stories/components/form-field/form-field.component';\r\nimport { TipografiaComponent } from 'src/stories/components/tipografia/tipografia.component';\r\nimport { ProgressSpinnerComponent } from 'src/stories/components/progress-spinner/progress-spinner.component';\r\nimport { TableComponent } from 'src/stories/components/table/table.component';\r\nimport { ClasesGlobalesComponent } from 'src/stories/components/Clases/clases-globales/clases-globales.component';\r\nimport { CheckboxComponent } from 'src/stories/components/checkbox/checkbox.component';\r\nimport { LayoutComponent } from 'src/stories/components/Clases/layoutt/layout.component';\r\nimport { MatListComponent } from 'src/stories/components/mat-list/mat-list.component';\r\nimport { ExpansionPanelComponent } from 'src/stories/components/expansion-panel/expansion-panel.component';\r\nimport { MatMenuComponent } from 'src/stories/components/menu/menu.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MatMenuComponent,\r\n    ExpansionPanelComponent,\r\n    LayoutComponent,\r\n    CheckboxComponent,\r\n    ClasesGlobalesComponent,\r\n    TableComponent,\r\n    ProgressSpinnerComponent,\r\n    TipografiaComponent,\r\n    FormFieldComponent,\r\n    RadioButtonComponent,\r\n    MatListComponent,\r\n    MatTabsComponent,\r\n    SlideToggleComponent,\r\n    TogglebuttonComponent,\r\n    ToolbarComponent,\r\n    StepperComponent,\r\n    SliderComponent,\r\n    ButtonComponent,\r\n    MatChipComponent,\r\n    IconComponent,\r\n    AppComponent,\r\n    SizeDirective,\r\n  ],\r\n  imports: [\r\n    MatListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ClasesGlobalesComponent"
                        },
                        {
                            "name": "ExpansionPanelComponent"
                        },
                        {
                            "name": "FormFieldComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MatChipComponent"
                        },
                        {
                            "name": "MatListComponent"
                        },
                        {
                            "name": "MatMenuComponent"
                        },
                        {
                            "name": "MatTabsComponent"
                        },
                        {
                            "name": "ProgressSpinnerComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "SizeDirective"
                        },
                        {
                            "name": "SlideToggleComponent"
                        },
                        {
                            "name": "SliderComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TipografiaComponent"
                        },
                        {
                            "name": "TogglebuttonComponent"
                        },
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-cc1f41f0b643ea0181a1905d34067596c118d4f8f23a95ffb4c71d03ba7636521b6ba918fb0be91e8e668f9b4d09ed27533fb8f49b341c70cac89de6fe2e440b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\nconst components = [\r\n  MatExpansionModule,\r\n  MatTableModule,\r\n  MatListModule,\r\n  MatButtonToggleModule,\r\n  MatMenuModule,\r\n  MatAutocompleteModule,\r\n  CommonModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonToggleModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [components],\r\n  exports: [components],\r\n})\r\nexport class MaterialModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "breakpoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Colores",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  MatExpansionModule,\r\n  MatTableModule,\r\n  MatListModule,\r\n  MatButtonToggleModule,\r\n  MatMenuModule,\r\n  MatAutocompleteModule,\r\n  CommonModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonToggleModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n]"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-slider/slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "configuracion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "descripcionComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/assets/model/modelo.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n]"
            },
            {
                "name": "ELEMENT_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PeriodicElement[]",
                "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n]"
            },
            {
                "name": "ExpansionPanel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "fabButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "templateFabButton.bind({})"
            },
            {
                "name": "fabExtendButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "templateFabExtendButton.bind({})"
            },
            {
                "name": "iconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "templateIconButton.bind({})"
            },
            {
                "name": "iconOutlineTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" class=\"material-icons-outlined mat-icon-outline\">home</mat-icon>\r\n  <mat-icon size=\"medium\" class=\"material-icons-outlined mat-icon-outline\" color=\"accent\">home</mat-icon>\r\n  <mat-icon class=\"material-icons-outlined mat-icon-outline\" size=\"large\" color=\"warn\">home</mat-icon>\r\n  </div>`,\r\n})"
            },
            {
                "name": "icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "iconTemplate.bind({})"
            },
            {
                "name": "Icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "iconsOutline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "iconOutlineTemplate.bind({})"
            },
            {
                "name": "iconsTwoTone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "iconTwoToneTemplate.bind({})"
            },
            {
                "name": "iconTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" color=\"primary\">home</mat-icon>\r\n  <mat-icon size=\"medium\" color=\"accent\">home</mat-icon>\r\n  <mat-icon size=\"large\" color=\"warn\">home</mat-icon>\r\n  </div>`,\r\n})"
            },
            {
                "name": "iconTwoToneTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  <mat-icon size=\"medium\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  <mat-icon size=\"large\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  </div>`,\r\n})"
            },
            {
                "name": "Introduction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "list",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-list/mat-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "listIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-list/mat-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "listTemplate.bind({})"
            },
            {
                "name": "listTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-list/mat-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<mat-list>\r\n  <div mat-subheader>Folders</div>\r\n  <mat-list-item >\r\n  Folder 1\r\n    <mat-icon matListItemIcon>folder</mat-icon>\r\n  </mat-list-item>\r\n  <div mat-subheader>Notes</div>\r\n  <mat-list-item >\r\n  Note 1\r\n  <mat-icon matListItemIcon>note</mat-icon>\r\n  </mat-list-item>\r\n  </mat-list>\r\n  <mat-divider></mat-divider>\r\n  <mat-list size=\"small\">\r\n  <div mat-subheader>Folders</div>\r\n  <mat-list-item >\r\n  Folder 1\r\n    <mat-icon matListItemIcon>folder</mat-icon>\r\n  </mat-list-item>\r\n  <div mat-subheader>Notes</div>\r\n  <mat-list-item >\r\n  Note 1\r\n  <mat-icon matListItemIcon>note</mat-icon>\r\n  </mat-list-item>\r\n  </mat-list>`,\r\n})"
            },
            {
                "name": "menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "properties",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/spacing/spacing.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Properties",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/layoutt/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sizedescripcion",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/assets/model/modelo.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Size propiedad'"
            },
            {
                "name": "table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ColorsComponent>",
                "defaultValue": "( args: ColorsComponent ) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpansionPanelComponent>",
                "defaultValue": "( args: ExpansionPanelComponent ) => ({ props: args })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormFieldComponent>",
                "defaultValue": "(args: FormFieldComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatIconModule>",
                "defaultValue": "(args: MatIconModule) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatChipComponent>",
                "defaultValue": "(args: MatChipComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-list/mat-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatListComponent>",
                "defaultValue": "(args: MatListComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StepperComponent>",
                "defaultValue": "(args: StepperComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-slider/slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SliderComponent>",
                "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-tabs/tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TogglebuttonComponent>",
                "defaultValue": "(\r\n  args: TogglebuttonComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ToolbarComponent>",
                "defaultValue": "(args: ToolbarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ProgressSpinnerComponent>",
                "defaultValue": "(\r\n  args: ProgressSpinnerComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<MatMenuComponent>",
                "defaultValue": "(args: MatMenuComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/radio-button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadioButtonComponent>",
                "defaultValue": "(args: RadioButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tipografia/tipografia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TipografiaComponent>",
                "defaultValue": "(args: TipografiaComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ClasesGlobalesComponent>",
                "defaultValue": "(\r\n  args: ClasesGlobalesComponent\r\n) => ({\r\n  props: args,\r\n  component: ClasesGlobalesComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/layoutt/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LayoutComponent>",
                "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n  component: LayoutComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponent>",
                "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n  component: IconComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/spacing/spacing.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SpacingComponent>",
                "defaultValue": "(args: SpacingComponent) => ({\r\n  props: args,\r\n  component: SpacingComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ResponsiveComponent>",
                "defaultValue": "(args: ResponsiveComponent) => ({\r\n  props: args,\r\n  component: ResponsiveComponent,\r\n})"
            },
            {
                "name": "templateFabButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n\r\n  template: ` <button mat-fab size=\"small\">\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"medium\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"large\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "templateFabExtendButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: ` <button mat-fab extended size=\"small\">\r\n  button\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab  extended size=\"medium\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button extended mat-fab size=\"large\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "templateIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: `<button size=\"small\" mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>\r\n<button mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "Tipografia",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tipografia/tipografia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/theme/size.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "Colors",
                "childs": [
                    {
                        "name": "primary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "primary"
                    },
                    {
                        "name": "accent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "accent"
                    },
                    {
                        "name": "warn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "warn"
                    },
                    {
                        "name": "success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "caption",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "caption"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            },
            {
                "name": "Sizes",
                "childs": [
                    {
                        "name": "small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "medium"
                    },
                    {
                        "name": "large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            },
            {
                "name": "TypographyLevels",
                "childs": [
                    {
                        "name": "h1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h1"
                    },
                    {
                        "name": "h2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h2"
                    },
                    {
                        "name": "h3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h3"
                    },
                    {
                        "name": "h4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h4"
                    },
                    {
                        "name": "h5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h5"
                    },
                    {
                        "name": "h6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h6"
                    },
                    {
                        "name": "subtitle1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "subtitle-1"
                    },
                    {
                        "name": "subtitle2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "subtitle-2"
                    },
                    {
                        "name": "body1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "body-1"
                    },
                    {
                        "name": "body2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "body-2"
                    },
                    {
                        "name": "caption",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "caption"
                    },
                    {
                        "name": "button",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "button"
                    },
                    {
                        "name": "overline",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "overline"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/components/Clases/responsive/responsive.stories.ts": [
                {
                    "name": "breakpoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ResponsiveComponent>",
                    "defaultValue": "(args: ResponsiveComponent) => ({\r\n  props: args,\r\n  component: ResponsiveComponent,\r\n})"
                }
            ],
            "src/stories/components/colors/colors.stories.ts": [
                {
                    "name": "Colores",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ColorsComponent>",
                    "defaultValue": "( args: ColorsComponent ) => ({ props: args })"
                }
            ],
            "src/app/material.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  MatExpansionModule,\r\n  MatTableModule,\r\n  MatListModule,\r\n  MatButtonToggleModule,\r\n  MatMenuModule,\r\n  MatAutocompleteModule,\r\n  CommonModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatExpansionModule,\r\n  MatButtonToggleModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n]"
                }
            ],
            "src/stories/components/mat-button/button.component.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "fabButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "templateFabButton.bind({})"
                },
                {
                    "name": "fabExtendButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "templateFabExtendButton.bind({})"
                },
                {
                    "name": "iconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "templateIconButton.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "templateFabButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n\r\n  template: ` <button mat-fab size=\"small\">\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"medium\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"large\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
                },
                {
                    "name": "templateFabExtendButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: ` <button mat-fab extended size=\"small\">\r\n  button\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab  extended size=\"medium\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button extended mat-fab size=\"large\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
                },
                {
                    "name": "templateIconButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: `<button size=\"small\" mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>\r\n<button mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>`,\r\n})"
                }
            ],
            "src/stories/components/mat-icon/icon.component.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "iconOutlineTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" class=\"material-icons-outlined mat-icon-outline\">home</mat-icon>\r\n  <mat-icon size=\"medium\" class=\"material-icons-outlined mat-icon-outline\" color=\"accent\">home</mat-icon>\r\n  <mat-icon class=\"material-icons-outlined mat-icon-outline\" size=\"large\" color=\"warn\">home</mat-icon>\r\n  </div>`,\r\n})"
                },
                {
                    "name": "icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "iconTemplate.bind({})"
                },
                {
                    "name": "iconsOutline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "iconOutlineTemplate.bind({})"
                },
                {
                    "name": "iconsTwoTone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "iconTwoToneTemplate.bind({})"
                },
                {
                    "name": "iconTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" color=\"primary\">home</mat-icon>\r\n  <mat-icon size=\"medium\" color=\"accent\">home</mat-icon>\r\n  <mat-icon size=\"large\" color=\"warn\">home</mat-icon>\r\n  </div>`,\r\n})"
                },
                {
                    "name": "iconTwoToneTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<div>\r\n  <mat-icon size=\"small\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  <mat-icon size=\"medium\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  <mat-icon size=\"large\" class=\"material-icons-two-tone mat-icon-two-tone\">home</mat-icon>\r\n  </div>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatIconModule>",
                    "defaultValue": "(args: MatIconModule) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-chip/mat-chip.component.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatChipComponent>",
                    "defaultValue": "(args: MatChipComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-stepper/stepper.component.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StepperComponent>",
                    "defaultValue": "(args: StepperComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-slider/slider.component.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-slider/slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-slider/slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SliderComponent>",
                    "defaultValue": "(args: SliderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-tabs/tabs.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-tabs/tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/mat-toggle-button/toggleButton.stories.ts": [
                {
                    "name": "configuracion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TogglebuttonComponent>",
                    "defaultValue": "(\r\n  args: TogglebuttonComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/assets/model/modelo.model.ts": [
                {
                    "name": "descripcionComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/assets/model/modelo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
                },
                {
                    "name": "Sizedescripcion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/assets/model/modelo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Size propiedad'"
                }
            ],
            "src/app/app.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\r\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n]"
                }
            ],
            "src/stories/components/table/table.component.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PeriodicElement[]",
                    "defaultValue": "[\n  { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n]"
                }
            ],
            "src/stories/components/expansion-panel/expansion-panel.stories.ts": [
                {
                    "name": "ExpansionPanel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpansionPanelComponent>",
                    "defaultValue": "( args: ExpansionPanelComponent ) => ({ props: args })"
                }
            ],
            "src/stories/components/Clases/icons/icon.stories.ts": [
                {
                    "name": "Icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconComponent>",
                    "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n  component: IconComponent,\r\n})"
                }
            ],
            "src/stories/components/Clases/clases-globales/clases.stories.ts": [
                {
                    "name": "Introduction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ClasesGlobalesComponent>",
                    "defaultValue": "(\r\n  args: ClasesGlobalesComponent\r\n) => ({\r\n  props: args,\r\n  component: ClasesGlobalesComponent,\r\n})"
                }
            ],
            "src/stories/components/mat-list/mat-list.stories.ts": [
                {
                    "name": "list",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-list/mat-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "listIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-list/mat-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "listTemplate.bind({})"
                },
                {
                    "name": "listTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-list/mat-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<mat-list>\r\n  <div mat-subheader>Folders</div>\r\n  <mat-list-item >\r\n  Folder 1\r\n    <mat-icon matListItemIcon>folder</mat-icon>\r\n  </mat-list-item>\r\n  <div mat-subheader>Notes</div>\r\n  <mat-list-item >\r\n  Note 1\r\n  <mat-icon matListItemIcon>note</mat-icon>\r\n  </mat-list-item>\r\n  </mat-list>\r\n  <mat-divider></mat-divider>\r\n  <mat-list size=\"small\">\r\n  <div mat-subheader>Folders</div>\r\n  <mat-list-item >\r\n  Folder 1\r\n    <mat-icon matListItemIcon>folder</mat-icon>\r\n  </mat-list-item>\r\n  <div mat-subheader>Notes</div>\r\n  <mat-list-item >\r\n  Note 1\r\n  <mat-icon matListItemIcon>note</mat-icon>\r\n  </mat-list-item>\r\n  </mat-list>`,\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-list/mat-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatListComponent>",
                    "defaultValue": "(args: MatListComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/menu/menu.stories.ts": [
                {
                    "name": "menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<MatMenuComponent>",
                    "defaultValue": "(args: MatMenuComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/progress-spinner/progress-spinner.stories.ts": [
                {
                    "name": "ProgressSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ProgressSpinnerComponent>",
                    "defaultValue": "(\r\n  args: ProgressSpinnerComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/Clases/spacing/spacing.stories.ts": [
                {
                    "name": "properties",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/spacing/spacing.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/spacing/spacing.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SpacingComponent>",
                    "defaultValue": "(args: SpacingComponent) => ({\r\n  props: args,\r\n  component: SpacingComponent,\r\n})"
                }
            ],
            "src/stories/components/Clases/layoutt/layout.stories.ts": [
                {
                    "name": "Properties",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/layoutt/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/layoutt/layout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<LayoutComponent>",
                    "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n  component: LayoutComponent,\r\n})"
                }
            ],
            "src/stories/components/radio-button/radio-button.stories.ts": [
                {
                    "name": "RadioButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/radio-button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadioButtonComponent>",
                    "defaultValue": "(args: RadioButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/form-field/form-field.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormFieldComponent>",
                    "defaultValue": "(args: FormFieldComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/mat-toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ToolbarComponent>",
                    "defaultValue": "(args: ToolbarComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/tipografia/tipografia.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tipografia/tipografia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TipografiaComponent>",
                    "defaultValue": "(args: TipografiaComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Tipografia",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tipografia/tipografia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/stories/assets/model/modelo.model.ts": [
                {
                    "name": "Colors",
                    "childs": [
                        {
                            "name": "primary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "primary"
                        },
                        {
                            "name": "accent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "accent"
                        },
                        {
                            "name": "warn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "warn"
                        },
                        {
                            "name": "success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "caption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "caption"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                },
                {
                    "name": "Sizes",
                    "childs": [
                        {
                            "name": "small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "medium"
                        },
                        {
                            "name": "large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                },
                {
                    "name": "TypographyLevels",
                    "childs": [
                        {
                            "name": "h1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h1"
                        },
                        {
                            "name": "h2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h2"
                        },
                        {
                            "name": "h3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h3"
                        },
                        {
                            "name": "h4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h4"
                        },
                        {
                            "name": "h5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h5"
                        },
                        {
                            "name": "h6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h6"
                        },
                        {
                            "name": "subtitle1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "subtitle-1"
                        },
                        {
                            "name": "subtitle2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "subtitle-2"
                        },
                        {
                            "name": "body1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "body-1"
                        },
                        {
                            "name": "body2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "body-2"
                        },
                        {
                            "name": "caption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "caption"
                        },
                        {
                            "name": "button",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "button"
                        },
                        {
                            "name": "overline",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "overline"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/theme/size.directive.ts": [
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/theme/size.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/model/modelo.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "descripcionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/model/modelo.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizedescripcion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/clases-globales/clases-globales.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClasesGlobalesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Introduction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/icons/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/icons/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/icons/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/layoutt/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/layoutt/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Properties",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/layoutt/layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/responsive/responsive.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "breakpoints",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/spacing/spacing.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpacingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/spacing/spacing.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "properties",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/Clases/spacing/spacing.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button-toggle/button-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/colors/colors.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Colores",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/colors/colors.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion-panel/expansion-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpansionPanelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExpansionPanel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/expansion-panel/expansion-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "variants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fabButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fabExtendButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateFabButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateFabExtendButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "templateIconButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-chip/mat-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-chip/mat-chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconOutlineTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconsOutline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconsTwoTone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconTwoToneTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-list/mat-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-list/mat-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "list",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-list/mat-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "listIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-list/mat-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "listTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-list/mat-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slide-toggle/slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slide-toggle/slide.toggle.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slider/slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slider/slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-stepper/stepper.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-tabs/mat-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-tabs/tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configuracion",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toggle-button/toggleButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toggle-button/togglebutton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TogglebuttonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/mat-toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/progress-spinner/progress-spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/snackbar/snackbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SnackbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PeriodicElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENT_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tipografia/tipografia.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TipografiaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tipografia/tipografia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/tipografia/tipografia.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tipografia",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/theme/size.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SizeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}