{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-070da78334849a78e3024b1a97fffae0ce3e95a5208553851cb3976948efb8a1e8f92bede11061a5637967b6c94b0d7affdcd497c30b92db6156e0cb13634ebc",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._FormBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"before\" | \"after\"",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._FormBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "title",
                    "defaultValue": "'densityComponents'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "typesOfShoes",
                    "defaultValue": "[\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  constructor(private _FormBuilder: FormBuilder) {}\r\n  title = 'densityComponents';\r\n\r\n  panelOpenState = false;\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n\r\n  firstFormGroup = this._FormBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._FormBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n\r\n  typesOfShoes: string[] = [\r\n    'Boots',\r\n    'Clogs',\r\n    'Loafers',\r\n    'Moccasins',\r\n    'Sneakers',\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_FormBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_FormBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div style=\"margin: 100px\">\r\n  <button color=\"primary\" mat-raised-button size=\"small\">\r\n    small\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button color=\"primary\" mat-raised-button size=\"medium\">\r\n    medium\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button color=\"primary\" mat-raised-button size=\"large\">\r\n    large\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button color=\"primary\" mat-icon-button size=\"small\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n  <button color=\"primary\" mat-icon-button size=\"medium\">\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button color=\"primary\" mat-icon-button size=\"large\">\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <mat-list role=\"list\" size=\"small\">\r\n    <mat-list-item role=\"listitem\">\r\n      Item 1\r\n      <button mat-icon-button matListItemMeta>\r\n        <mat-icon>folder</mat-icon>\r\n      </button>\r\n    </mat-list-item>\r\n    <mat-list-item role=\"listitem\">Item 2</mat-list-item>\r\n    <mat-list-item role=\"listitem\">Item 3</mat-list-item>\r\n  </mat-list>\r\n  <mat-toolbar color=\"primary\">\r\n    <button mat-icon-button>\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>My App</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button>\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button mat-icon-button>\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n  <mat-icon size=\"small\">folder</mat-icon>\r\n  <mat-icon size=\"medium\">folder</mat-icon>\r\n  <mat-icon size=\"large\">folder</mat-icon>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AutocompleteComponent",
            "id": "component-AutocompleteComponent-4b802b564dbfb34af0e00969ff455136aa4ff10330e49d5925c18081cbeda5646569c5bc595b05876e16f283678a9eaaf8a08c0ebc9d28482d10d487df96c0ea",
            "file": "src/stories/components/mat-autocomplete/autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-autcomplete",
            "styleUrls": [
                "../../../theme/stylesStorybook/_autocomplete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./autocomplete.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "dataSource",
                    "defaultValue": "ELEMENT_DATA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['position', 'name', 'weight', 'symbol']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'densityComponents'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'densityComponents';\n\n  myControl = new FormControl('');\n  options: string[] = ['One', 'Two', 'Three'];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-tab-group>\r\n  <mat-tab label=\"First\"> Content 1 </mat-tab>\r\n  <mat-tab label=\"Second\"> Content 2 </mat-tab>\r\n  <mat-tab label=\"Third\"> Content 3 </mat-tab>\r\n</mat-tab-group>\r\n<mat-chip>One fish</mat-chip>\r\n<mat-chip>Two fish</mat-chip>\r\n<mat-chip-option color=\"accent\" selected>Accent fish</mat-chip-option>\r\n<mat-chip-option color=\"warn\">Warn fish</mat-chip-option>\r\n<br />\r\n<button mat-raised-buttoncolor=\"primary\">Hola</button>\r\n<button mat-raised-buttoncolor=\"primary\">Hola</button>\r\n<button mat-raised-buttoncolor=\"primary\">Hola</button>\r\n<br />\r\n<mat-radio-group aria-label=\"Select an option\">\r\n  <mat-radio-button value=\"1\">Option 1</mat-radio-button>\r\n  <mat-radio-button value=\"2\">Option 2</mat-radio-button>\r\n</mat-radio-group>\r\n<br />\r\n<mat-form-field appearance=\"outline\">\r\n  <mat-label>Fill form field</mat-label>\r\n  <input matInput placeholder=\"Placeholder\" />\r\n  <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n  <mat-hint>Hint</mat-hint>\r\n</mat-form-field>\r\n<br />\r\n<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n    <mat-label>Number</mat-label>\r\n    <input type=\"text\"\r\n           placeholder=\"Pick one\"\r\n           aria-label=\"Number\"\r\n           matInput\r\n           [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>\r\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-8060e76e47460f81a06f82fc4d9a4c48d806e0ef110cc6ae1dcb8396f575428d1445a923a5e6d2c052e8acecb687360eb5d6cc9289c823ff9099d11b972e81b5",
            "file": "src/stories/components/button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-badge",
            "styleUrls": [
                "./radio-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss']\n})\nexport class BadgeComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"accent\" | \"warn\" | \"success\" | \"info\" | \"warning\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'Mat-slider',\r\n  template: `<mat-slider [ngClass]=\"sizes\"\r\n    ><input matSliderThumb\r\n  /></mat-slider>`,\r\n  styleUrls: ['../../../theme/stylesStorybook/_slider.component.scss'],\r\n})\r\nexport class SliderComponent {\r\n  @Input() size!: string;\r\n  @Input() color!: string;\r\n  public get sizes(): string[] {\r\n    return [\r\n      'mat-slider',\r\n      `slider--${this.size}`,\r\n      'mat-slider',\r\n      `slider--${this.color}`,\r\n    ];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".slider--small {\r\n  height: 47px;\r\n  &::ng-deep {\r\n    .mdc-slider__thumb-knob {\r\n      width: var(--mdc-slider-handle-width, 12px);\r\n      height: var(--mdc-slider-handle-height, 12px);\r\n      border-width: calc(var(--mdc-slider-handle-height, 12px) / 2)\r\n        calc(var(--mdc-slider-handle-width, 12px) / 2);\r\n    }\r\n    .mat-mdc-slider-visual-thumb .mat-ripple {\r\n      height: 28px !important;\r\n      width: 28px !important;\r\n      margin: 0.7142857142857143rem;\r\n      border-radius: 14px;\r\n    }\r\n    .mdc-slider__track--inactive {\r\n      height: var(--mdc-slider-inactive-track-height, 2px) !important;\r\n    }\r\n    .mdc-slider__track {\r\n      --mdc-slider-inactive-track-height: 2px !important;\r\n    }\r\n    .mdc-slider__track--active {\r\n      height: var(--mdc-slider-active-track-height, 4px);\r\n      top: calc(\r\n        (\r\n            var(--mdc-slider-inactive-track-height, 4px) -\r\n              var(--mdc-slider-active-track-height, 3px)\r\n          ) / 2\r\n      );\r\n    }\r\n  }\r\n}\r\n.slider--primary {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #1e62a1;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #1e62a1 !important;\r\n      background-color: #1e62a1 !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #1e62a1 !important;\r\n    }\r\n  }\r\n}\r\n.slider--accent {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #0cbbe2;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #0cbbe2 !important;\r\n      background-color: #0cbbe2 !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #0cbbe2 !important;\r\n    }\r\n  }\r\n}\r\n.slider--warn {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #d14343;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #d14343 !important;\r\n      background-color: #d14343 !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #d14343 !important;\r\n    }\r\n  }\r\n}\r\n.slider--success {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #8fc93a;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #8fc93a !important;\r\n      background-color: #8fc93a !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #8fc93a !important;\r\n    }\r\n  }\r\n}\r\n.slider--caution {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #fb8500;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #fb8500 !important;\r\n      background-color: #fb8500 !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #fb8500 !important;\r\n    }\r\n  }\r\n}\r\n.slider--info {\r\n  &::ng-deep {\r\n    .mdc-slider__track--inactive {\r\n      background-color: #2d9fc5;\r\n      opacity: 0.24;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      border-color: #2d9fc5 !important;\r\n      background-color: #2d9fc5 !important;\r\n    }\r\n    .mdc-slider__track--active_fill {\r\n      border-color: #2d9fc5 !important;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "../../../theme/stylesStorybook/_slider.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "sizes": {
                    "name": "sizes",
                    "getSignature": {
                        "name": "sizes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            }
        },
        {
            "name": "SlideToggleComponent",
            "id": "component-SlideToggleComponent-688838ad74ab87de9bb6459edd09dd397edd4570ed8ab3f1c93f14991a6bceac597789dddafa7148f3679048ed91f9a16c36802fe97f0a9ba283d2da09ed95e6",
            "file": "src/stories/components/mat-slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-slide-toggle",
            "styleUrls": [
                "../../../theme/stylesStorybook/_slide-toggle.component.scss"
            ],
            "styles": [],
            "template": "<mat-slide-toggle [ngClass]=\"sizes\">{{    label\n  }}</mat-slide-toggle>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "panelOpenState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Sizes } from '../../assets/model/modelo.model';\n@Component({\n  selector: 'radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss']\n})\nexport class RadioButtonComponent {\n  @Input() \n  color?: 'primary'|'accent'|'warn'|'success'|'info'|'warning' = 'primary' ;\n  @Input ()\n  size ?: Sizes;\n\n  public get colorOption(): string[] {\n    return [`radio-button--${this.color}`]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".radio-button--small{\r\n    \r\n}",
                    "styleUrl": "./radio-button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "colorOption": {
                    "name": "colorOption",
                    "getSignature": {
                        "name": "colorOption",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<mat-radio-group >\r\n    <mat-radio-button >Option 1</mat-radio-button>\r\n    <mat-radio-button >Option 2</mat-radio-button>\r\n </mat-radio-group>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-7686417782b3437edc26a7402a8cc89016964c75317f6219aed6bbf1cec5e16a3575b8f491f7f7a51e7de447c7cf18265b671c9d25bf2eb0d91cbfbf889fce09",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent            } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule          } from './material.module';\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,   \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-799cd738d74fc0db09c202a0f5731df530b6f0f866db66ca09803f8f3fe40dc1bd5940a5adcf08e58a068bf1009c57cfdbd0417bd58ac86aa6be76b1caea0f87",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule                 } from '@angular/core';\r\nimport { CommonModule             } from '@angular/common';\r\nimport { MatButtonModule          } from '@angular/material/button';\r\nimport { MatProgressBarModule     } from '@angular/material/progress-bar';\r\nimport { MatChipsModule           } from '@angular/material/chips';\r\nimport { MatToolbarModule         } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSliderModule          } from '@angular/material/slider';\r\nimport { MatBadgeModule           } from '@angular/material/badge';\r\nimport { MatSlideToggleModule     } from '@angular/material/slide-toggle';\r\nimport { MatStepperModule         } from '@angular/material/stepper';\r\nimport { MatInputModule           } from '@angular/material/input';\r\nimport { MatSnackBarModule        } from '@angular/material/snack-bar';\r\nimport { MatIconModule            } from '@angular/material/icon';\r\nimport { MatTabsModule            } from '@angular/material/tabs';\r\nimport { MatCheckboxModule        } from '@angular/material/checkbox';\r\nimport { MatRadioModule           } from '@angular/material/radio';\r\nimport { MatDividerModule         } from '@angular/material/divider';\r\nimport { MatFormFieldModule       } from '@angular/material/form-field';\r\nimport { MatSelectModule          } from '@angular/material/select';\r\nimport { MatDatepickerModule      } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\n\r\nconst components = [\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule\r\n  \r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [components],\r\n  exports: [components]\r\n})\r\nexport class MaterialModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-04c202b3f2b4c3d119654977ea7ed9431fda1f97fc88096d2cfc7a963cfea04e958f95acfb8963c4de40c2ee842e5a9196b82a7f6c2e950c562a86e173faa287",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nconst components = [\r\n  MatAutocompleteModule,\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [components],\r\n  exports: [components],\r\n})\r\nexport class MaterialModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "breakpoints",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Colores",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/colors/colors.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule\r\n  \r\n]"
            },
            {
                "name": "descripcionComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/assets/model/modelo.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
            },
            {
                "name": "RadioButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/button/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadioButtonComponent>",
                "defaultValue": "(args: RadioButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tipografia/tipografia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TipografiaComponent>",
                "defaultValue": "(args: TipografiaComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/clases-globales/clases.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ClasesGlobalesComponent>",
                "defaultValue": "(\r\n  args: ClasesGlobalesComponent\r\n) => ({\r\n  props: args,\r\n  component: ClasesGlobalesComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconComponent>",
                "defaultValue": "(args: IconComponent) => ({\r\n  props: args,\r\n  component: IconComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ResponsiveComponent>",
                "defaultValue": "(args: ResponsiveComponent) => ({\r\n  props: args,\r\n  component: ResponsiveComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/layoutt/layout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<LayoutComponent>",
                "defaultValue": "(args: LayoutComponent) => ({\r\n  props: args,\r\n  component: LayoutComponent,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/Clases/spacing/spacing.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SpacingComponent>",
                "defaultValue": "(args: SpacingComponent) => ({\r\n  props: args,\r\n  component: SpacingComponent,\r\n})"
            },
            {
                "name": "templateFabButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n\r\n  template: ` <button mat-fab size=\"small\">\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"medium\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab size=\"large\">\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "templateFabExtendButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: ` <button mat-fab extended size=\"small\">\r\n  button\r\n  <mat-icon>favorite</mat-icon>\r\n</button>\r\n<button mat-fab  extended size=\"medium\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>\r\n<button extended mat-fab size=\"large\">\r\nbutton\r\n<mat-icon>favorite</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "templateIconButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  styleUrls: ['./button.component.scss'],\r\n  template: `<button size=\"small\" mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>\r\n<button mat-icon-button color=\"accent\" >\r\n  <mat-icon>home</mat-icon>\r\n</button>`,\r\n})"
            },
            {
                "name": "Tipografia",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/tipografia/tipografia.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "variants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "src/theme/size.directive.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "Colors",
                "childs": [
                    {
                        "name": "primary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "primary"
                    },
                    {
                        "name": "accent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "accent"
                    },
                    {
                        "name": "warn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "warn"
                    },
                    {
                        "name": "success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "caption",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "caption"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            },
            {
                "name": "Sizes",
                "childs": [
                    {
                        "name": "small",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "small"
                    },
                    {
                        "name": "medium",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "medium"
                    },
                    {
                        "name": "large",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "large"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            },
            {
                "name": "TypographyLevels",
                "childs": [
                    {
                        "name": "h1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h1"
                    },
                    {
                        "name": "h2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h2"
                    },
                    {
                        "name": "h3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h3"
                    },
                    {
                        "name": "h4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h4"
                    },
                    {
                        "name": "h5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h5"
                    },
                    {
                        "name": "h6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "h6"
                    },
                    {
                        "name": "subtitle1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "subtitle-1"
                    },
                    {
                        "name": "subtitle2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "subtitle-2"
                    },
                    {
                        "name": "body1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "body-1"
                    },
                    {
                        "name": "body2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "body-2"
                    },
                    {
                        "name": "caption",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "caption"
                    },
                    {
                        "name": "button",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "button"
                    },
                    {
                        "name": "overline",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "overline"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/assets/model/modelo.model.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/components/Clases/responsive/responsive.stories.ts": [
                {
                    "name": "breakpoints",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/Clases/responsive/responsive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ResponsiveComponent>",
                    "defaultValue": "(args: ResponsiveComponent) => ({\r\n  props: args,\r\n  component: ResponsiveComponent,\r\n})"
                }
            ],
            "src/stories/components/colors/colors.stories.ts": [
                {
                    "name": "Colores",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/colors/colors.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ColorsComponent>",
                    "defaultValue": "( args: ColorsComponent ) => ({ props: args })"
                }
            ],
            "src/app/material.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CommonModule,\r\n  MatButtonModule,\r\n  MatProgressBarModule,\r\n  MatToolbarModule,\r\n  MatChipsModule,\r\n  MatProgressSpinnerModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatRadioModule,\r\n  MatSlideToggleModule,\r\n  MatCheckboxModule,\r\n  MatStepperModule,\r\n  MatFormFieldModule,\r\n  MatSnackBarModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatTabsModule,\r\n  MatDividerModule,\r\n  MatSelectModule,\r\n  MatDatepickerModule,\r\n  MatRippleModule,\r\n  MatNativeDateModule\r\n  \r\n]"
                }
            ],
            "src/stories/assets/model/modelo.model.ts": [
                {
                    "name": "descripcionComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/assets/model/modelo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
                },
                {
                    "name": "Sizedescripcion",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/assets/model/modelo.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Size propiedad'"
                }
            ],
            "src/stories/components/button/radio-button.stories.ts": [
                {
                    "name": "ELEMENT_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'componente usa por defecto el color primary, para hacer uso de los otros colores solo debe cambiar la propiedad `color=\" \" ` por cualquiera de los siguientes opciones : '"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/stories/assets/model/modelo.model.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/button/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadioButtonComponent>",
                    "defaultValue": "(args: RadioButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/table/table.stories.ts": [
                {
                    "name": "table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/components/form-field/form-field.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormFieldComponent>",
                    "defaultValue": "(args: FormFieldComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "variants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/mat-toolbar/toolbar.component.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ToolbarComponent>",
                    "defaultValue": "(args: ToolbarComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/mat-toolbar/toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/components/tipografia/tipografia.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tipografia/tipografia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TipografiaComponent>",
                    "defaultValue": "(args: TipografiaComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Tipografia",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/tipografia/tipografia.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/stories/assets/model/modelo.model.ts": [
                {
                    "name": "Colors",
                    "childs": [
                        {
                            "name": "primary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "primary"
                        },
                        {
                            "name": "accent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "accent"
                        },
                        {
                            "name": "warn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "warn"
                        },
                        {
                            "name": "success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "caption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "caption"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                },
                {
                    "name": "Sizes",
                    "childs": [
                        {
                            "name": "small",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "small"
                        },
                        {
                            "name": "medium",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "medium"
                        },
                        {
                            "name": "large",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "large"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                },
                {
                    "name": "TypographyLevels",
                    "childs": [
                        {
                            "name": "h1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h1"
                        },
                        {
                            "name": "h2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h2"
                        },
                        {
                            "name": "h3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h3"
                        },
                        {
                            "name": "h4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h4"
                        },
                        {
                            "name": "h5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h5"
                        },
                        {
                            "name": "h6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "h6"
                        },
                        {
                            "name": "subtitle1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "subtitle-1"
                        },
                        {
                            "name": "subtitle2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "subtitle-2"
                        },
                        {
                            "name": "body1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "body-1"
                        },
                        {
                            "name": "body2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "body-2"
                        },
                        {
                            "name": "caption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "caption"
                        },
                        {
                            "name": "button",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "button"
                        },
                        {
                            "name": "overline",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "overline"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/assets/model/modelo.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/theme/size.directive.ts": [
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "src/theme/size.directive.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/assets/model/modelo.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "descripcionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/radio-button/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}